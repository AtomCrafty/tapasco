before_script:
  - echo "Setup done"

after_script:
  - echo "Done with the work"

stages:
  - software_tests
  - build_sbt
  - build_kernel
  - build_runtime

test_tapasco:
  stage: software_tests
  image: ubuntu:latest
  tags:
    - CAD
    - High
  script:
    - apt-get -y update && apt-get -y install unzip git zip findutils curl
    - curl -s "https://get.sdkman.io" | bash
    - source "/root/.sdkman/bin/sdkman-init.sh"
    - sdk install java
    - sdk install sbt
    - source setup.sh
    - sbt test

build_sbt_tapasco_ubuntu_16_04:
  stage: build_sbt
  image: ubuntu:xenial
  tags:
    - CAD
    - High
  script:
    - apt-get -y update && apt-get -y install unzip git zip findutils curl
    - curl -s "https://get.sdkman.io" | bash
    - source "/root/.sdkman/bin/sdkman-init.sh"
    - sdk install java
    - sdk install sbt
    - sbt version
    - source setup.sh
    - sbt assembly

build_sbt_tapasco_ubuntu_18_04:
  stage: build_sbt
  image: ubuntu:cosmic
  tags:
    - CAD
    - High
  script:
    - apt-get -y update && apt-get -y install unzip git zip findutils curl
    - curl -s "https://get.sdkman.io" | bash
    - source "/root/.sdkman/bin/sdkman-init.sh"
    - sdk install java
    - sdk install sbt
    - sbt version
    - source setup.sh
    - sbt assembly

build_sbt_tapasco_fedora_27:
  stage: build_sbt
  image: fedora:27
  tags:
    - CAD
    - High
  script:
    - dnf -y install which unzip git zip findutils
    - curl -s "https://get.sdkman.io" | bash
    - source "/root/.sdkman/bin/sdkman-init.sh"
    - sdk install java
    - sdk install sbt
    - sbt version
    - source setup.sh
    - sbt assembly

build_sbt_tapasco_fedora_28:
  stage: build_sbt
  image: fedora:28
  tags:
    - CAD
    - High
  script:
    - dnf -y install which unzip git zip findutils
    - curl -s "https://get.sdkman.io" | bash
    - source "/root/.sdkman/bin/sdkman-init.sh"
    - sdk install java
    - sdk install sbt
    - sbt version
    - source setup.sh
    - sbt assembly

build_kernel_ubuntu_16_04:
  stage: build_kernel
  image: ubuntu:xenial
  tags:
    - CAD
    - Normal
  script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python libelf-dev
    - source setup.sh
    - for d in `ls /lib/modules`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/lib/modules/$d/build" clean && make LINUX_HOME=/lib/modules/$d/build -j release; popd; done
  artifacts:
    paths:
      - tlkm/tlkm.ko

build_kernel_ubuntu_18_04:
  stage: build_kernel
  image: ubuntu:cosmic
  tags:
    - CAD
    - Normal
  script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python libelf-dev
    - source setup.sh
    - for d in `ls /lib/modules`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/lib/modules/$d/build" clean && make LINUX_HOME=/lib/modules/$d/build -j release; popd; done
  artifacts:
    paths:
      - tlkm/tlkm.ko

build_kernel_fedora_27:
  stage: build_kernel
  image: fedora:27
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel
    - source setup.sh
    - for d in `ls /usr/src/kernels/`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/usr/src/kernels/$d" clean && make LINUX_HOME=/usr/src/kernels/$d -j release; popd; done
  artifacts:
    paths:
      - tlkm/tlkm.ko

build_kernel_fedora_28:
  stage: build_kernel
  image: fedora:28
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel
    - source setup.sh
    - for d in `ls /usr/src/kernels/`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/usr/src/kernels/$d" clean && make LINUX_HOME=/usr/src/kernels/$d -j release; popd; done
  artifacts:
    paths:
      - tlkm/tlkm.ko

build_kernel_fedora_29:
  stage: build_kernel
  image: fedora:29
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel
    - source setup.sh
    - for d in `ls /usr/src/kernels/`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/usr/src/kernels/$d" clean && make LINUX_HOME=/usr/src/kernels/$d -j release; popd; done
  artifacts:
    paths:
      - tlkm/tlkm.ko

build_kernel_ubuntu_16_04_debug:
  stage: build_kernel
  image: ubuntu:xenial
  tags:
    - CAD
    - Normal
  script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python libelf-dev
    - source setup.sh
    - for d in `ls /lib/modules`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/lib/modules/$d/build" clean && make LINUX_HOME=/lib/modules/$d/build -j; popd; done
  artifacts:
    paths:
      - tlkm/tlkm.ko

build_kernel_ubuntu_18_04_debug:
  stage: build_kernel
  image: ubuntu:cosmic
  tags:
    - CAD
    - Normal
  script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python libelf-dev
    - source setup.sh
    - for d in `ls /lib/modules`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/lib/modules/$d/build" clean && make LINUX_HOME=/lib/modules/$d/build -j; popd; done
  artifacts:
    paths:
      - tlkm/tlkm.ko

build_kernel_fedora_27_debug:
  stage: build_kernel
  image: fedora:27
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel
    - source setup.sh
    - for d in `ls /usr/src/kernels/`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/usr/src/kernels/$d" clean && make LINUX_HOME=/usr/src/kernels/$d -j; popd; done
  artifacts:
    paths:
      - tlkm/tlkm.ko

build_kernel_fedora_28_debug:
  stage: build_kernel
  image: fedora:28
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel
    - source setup.sh
    - for d in `ls /usr/src/kernels/`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/usr/src/kernels/$d" clean && make LINUX_HOME=/usr/src/kernels/$d -j; popd; done
  artifacts:
    paths:
      - tlkm/tlkm.ko

build_kernel_fedora_29_debug:
  stage: build_kernel
  image: fedora:29
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel
    - source setup.sh
    - for d in `ls /usr/src/kernels/`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/usr/src/kernels/$d" clean && make LINUX_HOME=/usr/src/kernels/$d -j; popd; done
  artifacts:
    paths:
      - tlkm/tlkm.ko

.build_tapasco:
  stage: build_runtime
  variables:
    MODE: "release"
  tags:
    - CAD
    - Normal
  script:
    - source setup.sh
    - tapasco-build-libs --mode=$MODE --skip_driver
    - cd build && make package

.build_tapasco_fedora:
  before_script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel cmake ncurses-devel python libatomic git rpm-build
  artifacts:
    paths:
      - build/tapasco-2018.2.1-Linux.rpm
  extends: .build_tapasco

build_tapasco_fedora_24:
  image: fedora:24
  extends: .build_tapasco_fedora

build_tapasco_fedora_25:
  image: fedora:25
  extends: .build_tapasco_fedora

build_tapasco_fedora_26:
  image: fedora:26
  extends: .build_tapasco_fedora

build_tapasco_fedora_27:
  image: fedora:27
  extends: .build_tapasco_fedora

build_tapasco_fedora_28:
  image: fedora:28
  extends: .build_tapasco_fedora

build_tapasco_fedora_29:
  image: fedora:29
  extends: .build_tapasco_fedora

build_tapasco_fedora_30:
  image: fedora:30
  extends: .build_tapasco_fedora

build_tapasco_fedora_26_debug:
  variables:
    MODE: "debug"
  image: fedora:26
  extends: .build_tapasco_fedora

build_tapasco_fedora_27_debug:
  variables:
    MODE: "debug"
  image: fedora:27
  extends: .build_tapasco_fedora

build_tapasco_fedora_28_debug:
  variables:
    MODE: "debug"
  image: fedora:28
  extends: .build_tapasco_fedora

build_tapasco_fedora_29_debug:
  variables:
    MODE: "debug"
  image: fedora:29
  extends: .build_tapasco_fedora

build_tapasco_fedora_30_debug:
  variables:
    MODE: "debug"
  image: fedora:30
  extends: .build_tapasco_fedora

.build_tapasco_ubuntu:
  before_script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python cmake libelf-dev libncurses-dev git rpm
  artifacts:
    paths:
      - build/tapasco-2018.2.1-Linux.deb
  extends: .build_tapasco

build_tapasco_ubuntu_16_04:
  image: ubuntu:xenial
  extends: .build_tapasco_ubuntu

build_tapasco_ubuntu_18_04:
  image: ubuntu:bionic
  extends: .build_tapasco_ubuntu

build_tapasco_ubuntu_18_10:
  image: ubuntu:cosmic
  extends: .build_tapasco_ubuntu

build_tapasco_ubuntu_19_04:
  image: ubuntu:disco
  extends: .build_tapasco_ubuntu

build_tapasco_ubuntu_16_04_debug:
  variables:
    MODE: "debug"
  image: ubuntu:xenial
  extends: .build_tapasco_ubuntu

build_tapasco_ubuntu_18_04_debug:
  variables:
    MODE: "debug"
  image: ubuntu:bionic
  extends: .build_tapasco_ubuntu

build_tapasco_ubuntu_18_10_debug:
  variables:
    MODE: "debug"
  image: ubuntu:cosmic
  extends: .build_tapasco_ubuntu

build_tapasco_ubuntu_19_04_debug:
  variables:
    MODE: "debug"
  image: ubuntu:disco
  extends: .build_tapasco_ubuntu
